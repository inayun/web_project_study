-- 7.DDL.sql
-- table 생성(create)과 삭제(drop), 수정(alter)

	-- 고려사항 : 가급적 table 생성은 application으로 수시로 생성되는 상황은 비추
	-- 분석설계 -> table 구축시 app ~ 서비스하는 중에 필요한 table 들은 미리 생성 권장 


-- DDL(Data Definition Language)

-- Oracle타입 : 자바 타입   = varchar2,char : String
--				     = number(전체자리수[, 소수점이하자리]) : 정수, 실수
					number(3) : 정수 3자리
					number(3,1) : 전체 3자리 단 소수점이하 한자리 허용



--				     = date : java.util.Date, java.sql.Date, String
--					tip : 현업[필드,실무]에서는 date타입을 String으로 사용 빈도 높다 
/* 참고 : 
	- varchar2[최대 메모리] : char[고정사이즈메모리] 
	- varchar2(10)의 타입에 - abc 저장(실제 메모리는? 3byte만 사용)
	- char(5)로 선언 - a 저장(실제 메모리는 5byte 소진)	

  * varchar2 (사이즈 제한)
	- 범위 설정없이 선언시 자동 점유 사이즈(4000 byte)
	- oracle 8i까지의 문자열 표현 : varchar
	- 11g에도 varchar로 설정시 자동으로 varchar2로 변경 
	- 참고 : ms sql인 경우 8000byte로 최대값 설정함

  * number 
	- 자릿수 제한없이 선언시 38자리 자동 설정 

 [1] table 생성 명령어
    create table table명(
	칼럼명1 칼럼타입[(사이즈)] [제약조건] ,
	칼럼명2....
    ); 

[2] table 삭제 명령어
	drop table table명;

[3] table 구조 수정 명령어

*/


-- table 삭제 문장부터 작성 권장 ( 혹시나 테이블이 이미 존재하고있을 수 있기 때문에 미리 없애고 시작함)
drop table test;
create table test(
	name varchar(10)
);
desc test;

------- varchar2  로 씀

drop table test;

--1. table삭제 
drop table test;


--2. table 생성  
-- name(varchar2), age(number3) 칼럼 보유한 people table 생성


create table people (
	name varchar2(10) not null,
	age number(3) not null
);


-- 3. 서브 쿼리 활용해서 emp01 table 생성(이미 존재하는 table기반으로 생성)
-- emp table의 모든 데이터로 emp01 생성

drop table emp01;
create table emp01 as select * from emp;


-- 4. 서브쿼리 활용해서 특정 칼럼(empno)만으로 emp02 table 생성


drop table emp02;
create table emp02 as select empno from emp;

desc emp02;
select * from emp02;


--5. deptno=10 조건문 반영해서 emp03 table 생성

drop table emp03;
create table emp03 as select * from emp where deptno=10;
select * from emp03;


-- 6. 데이터 insert없이 table 구조로만 새로운 emp04 table생성시 
-- 사용되는 조건식 : where=거짓


drop table emp04;
create table emp04 as select * from emp where 1=0;
desc emp04;
select * from emp04;



-- *** table 수정 : alter ***
-- emp01 table로 실습해 보기

--7. emp01 table에 job이라는 특정 칼럼 추가(job varchar2(10))
-- 이미 데이터를 보유한 table에 새로운 job칼럼 추가 가능 
desc emp01;
drop table emp01;
create table emp01 as select empno, ename from emp;
desc emp01;



alter table emp01 add(job varchar2(10));


--8. 이미 존재하는 칼럼 사이즈 변경 시도해 보기
-- 데이터 미 존재 칼럼의 사이즈 수정

alter table emp01 modify(job varchar2(20));
desc emp01;





--9. 이미 데이터가 존재할 경우 칼럼 사이즈가 큰 사이즈의 컬럼으로 변경 가능 
-- 혹 사이즈 감소시 주의사항 : 이미 존재하는 데이터보다 적은 사이즈로 변경 절대 불가 
drop table emp01;
create table emp01 as select empno, ename, job from emp;
select * from emp01;
desc emp01;

alter table emp01 modify(job varchar(30));
desc emp01;
select * from emp01;
alter table emp01 modify(job varchar(10));
// 5로 사이즈 안줄어듦, 이미 존재하는 데이터가 사이즈 5를 넘은게 있기때문에 
alter table emp01 modify(job varchar(5));


--10. job 칼럼 삭제 
-- 데이터 존재시에도 자동 삭제 



alter table emp01 drop (


desc emp01;
select * from emp01;


--11. emp01을 test01로 table 이름 변경


rename emp01 to test01;

select * from test01;


--12. table의 순수 데이터만 완벽하게 삭제하는 명령어 
--commit 불필요




select * from emp01;
truncate table emp01;
select * from emp01;


table 생성(create), 삭제(drop), 구조수정(alter) 명령은 commit/rollback 과 같은 트랜잭션 명령어 불.필.요

insert/update/delete 는 commit/rollback 필수
JDBC API 라는 java로 sql 문장 실행 가능한 스펙은 insert/update/delete 라 하더라도 자동 commit





