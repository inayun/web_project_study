package probono.controller;

import java.io.IOException;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import probono.model.ActivistDAO;
import probono.model.ProbonoService;
import probono.model.dto.ActivistDTO;

public class ProbonoFrontController extends HttpServlet {
	public ProbonoFrontController() {
		super();
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		process(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		process(request, response);
	}

	protected void process(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("euc-kr");
		String command = request.getParameter("command");
		
		try {
			if (command.equals("probonoProjectAll")) {// 모든 probono project 정보 검색
				probonoProjectAll(request, response);
			} else if (command.equals("activistAll")) {// 모든 재능 기부자 검색
				activistAll(request, response);
			} else if (command.equals("activist")) {// 특정 재능 기부자 정보 검색
				activist(request, response);
			} else if (command.equals("activistInsert")) {// 재능 기부자 추가 등록
				activistInsert(request, response);
			} else if (command.equals("activistUpdateReq")) {// 재능 기부자 정보 수정요청
				activistUpdateReq(request, response);
			} else if (command.equals("activistUpdate")) {// 재능 기부자 정보 수정
				activistUpdate(request, response);
			} else if (command.equals("activistDelete")) {// 재능 기부자 탈퇴[삭제]
				activistDelete(request, response);
			}
		} catch (Exception s) {
			request.setAttribute("errorMsg", s.getMessage());
			request.getRequestDispatcher("showError.jsp").forward(request, response);
			s.printStackTrace();
		}
	}

	// 모두 ProbonoProject 검색 메소드
	public void probonoProjectAll(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String url = "showError.jsp";
		try {
			request.setAttribute("probonoProjectAll", ProbonoService.getAllProbonoProjects());
			url = "probonoProjectList.jsp";
		} catch (Exception s) {
			request.setAttribute("errorMsg", s.getMessage());
		}
		request.getRequestDispatcher(url).forward(request, response);
	}

	// 모든 재능 기부자 검색 - 검색된 데이터 출력 화면[activistList.jsp]
	public void activistAll(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String url = "showError.jsp";
		try {
			request.setAttribute("activistAll", ProbonoService.getAllActivists());
			url = "activistList.jsp";
		} catch (Exception s) {
			request.setAttribute("errorMsg", s.getMessage());
		}
		request.getRequestDispatcher(url).forward(request, response);
	}

	// 재능 기부자 검색
	public void activist(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String url = "showError.jsp";
		try {
			request.setAttribute("activist", ProbonoService.getActivist(request.getParameter("activistId")));
			url = "activistDetail.jsp";
			request.setAttribute("successMsg","기부자 상세보기");
		} catch (Exception s) {
			request.setAttribute("errorMsg", s.getMessage());
		}
		request.getRequestDispatcher(url).forward(request, response);
	}

	// 재능 기부자 가입 메소드
	protected void activistInsert(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String id = request.getParameter("id").trim();
		String pw = request.getParameter("pw").trim();
		String name = request.getParameter("name").trim();
		String major = request.getParameter("major").trim();
		String url = "showError.jsp";
		ActivistDTO avo = new ActivistDTO(id, name, pw, major);

		if (id == null || id.trim().length() == 0 || pw == null || pw.trim().length() == 0 || name == null
				|| name.trim().length() == 0 || major == null || major.trim().length() == 0) {
			response.sendRedirect("activistInsert.html");
			return;
		}
		try {
			if (ActivistDAO.addActivist(avo)) {
				request.setAttribute("activist", avo);
				request.setAttribute("successMsg", "가입 완료!");
				url = "activistDetail.jsp";
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		request.setAttribute("errorMsg", "저장 시도 실패 재 시도 하세요");
		request.getRequestDispatcher(url).forward(request, response);

	}

	// 재능 기부자 수정 요구
	public void activistUpdateReq(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String url = "showError.jsp";
		try {
			request.setAttribute("activist", ProbonoService.getActivist(request.getParameter("activistId")));
			url = "activistUpdate.jsp";
		} catch (Exception s) {
			request.setAttribute("errorMsg", s.getMessage());
		}
		request.getRequestDispatcher(url).forward(request, response);
	}

	// 재능 기부자 수정 - 상세정보 확인 jsp[activistDetail.jsp]
	public void activistUpdate(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String id = request.getParameter("activistId").trim();
		String major = request.getParameter("major").trim();
		String url = "showError.jsp";
		
		if (id == null || id.trim().length() == 0 || major == null || major.trim().length() == 0) {
			response.sendRedirect("probono");
			return;
		}
		try {
			if (ActivistDAO.updateActivist(id, major)) {
				request.setAttribute("activist",ActivistDAO.getActivist(id));
				url = "activistDetail.jsp";
				request.setAttribute("successMsg", "수정 완료!");
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		request.setAttribute("errorMsg", "수정 시도 실패 재 시도 하세요");
		request.getRequestDispatcher(url).forward(request, response);

	}

	// 재능 기부자 삭제
	public void activistDelete(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		String id = request.getParameter("activistId").trim();
		String url = "showError.jsp";
		if (id == null || id.trim().length() == 0) {
			response.sendRedirect("probono");
			return;
		}
		try {
			if (ActivistDAO.deleteActivist(id)) {
				request.setAttribute("activistAll", ProbonoService.getAllActivists());
				url = "activistList.jsp";
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		request.setAttribute("errorMsg", "수정 시도 실패 재 시도 하세요");
		request.getRequestDispatcher(url).forward(request, response);

	}
	}

